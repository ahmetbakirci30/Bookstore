// <auto-generated />
using System;
using Bookstore.Web.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Bookstore.Web.Migrations
{
    [DbContext(typeof(BookstoreDbContext))]
    [Migration("20210517213041_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Bookstore.Web.Models.Author", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Author");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AddedDate = new DateTime(2021, 5, 18, 0, 30, 40, 930, DateTimeKind.Local).AddTicks(2964),
                            FullName = "Bilal ÖZTÜRK"
                        },
                        new
                        {
                            Id = 2,
                            AddedDate = new DateTime(2021, 5, 18, 0, 30, 40, 930, DateTimeKind.Local).AddTicks(3439),
                            FullName = "Ali ÖZTÜRK"
                        },
                        new
                        {
                            Id = 3,
                            AddedDate = new DateTime(2021, 5, 18, 0, 30, 40, 930, DateTimeKind.Local).AddTicks(3441),
                            FullName = "Evliya ÇELEBİ"
                        },
                        new
                        {
                            Id = 4,
                            AddedDate = new DateTime(2021, 5, 18, 0, 30, 40, 930, DateTimeKind.Local).AddTicks(3444),
                            FullName = "Mustafa BAKIRCI"
                        });
                });

            modelBuilder.Entity("Bookstore.Web.Models.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("AuthorId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.ToTable("Book");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AddedDate = new DateTime(2021, 5, 18, 0, 30, 40, 931, DateTimeKind.Local).AddTicks(7158),
                            AuthorId = 4,
                            Description = "My Last Book In Programming Languages.",
                            ImagePath = "team-image-2-646x680.jpg",
                            Title = "Dart Programming Tutorial For Beginners"
                        },
                        new
                        {
                            Id = 2,
                            AddedDate = new DateTime(2021, 5, 18, 0, 30, 40, 931, DateTimeKind.Local).AddTicks(8824),
                            AuthorId = 3,
                            Description = "My Third Book In Programming Languages.",
                            ImagePath = "about-1-570x350.jpg",
                            Title = "Paython Programming Tutorial For Beginners"
                        },
                        new
                        {
                            Id = 3,
                            AddedDate = new DateTime(2021, 5, 18, 0, 30, 40, 931, DateTimeKind.Local).AddTicks(8828),
                            AuthorId = 2,
                            Description = "My Second Book In Programming Languages.",
                            ImagePath = "team-image-1-646x680.jpg",
                            Title = "C# Programming Tutorial For Beginners"
                        },
                        new
                        {
                            Id = 4,
                            AddedDate = new DateTime(2021, 5, 18, 0, 30, 40, 931, DateTimeKind.Local).AddTicks(8830),
                            AuthorId = 1,
                            Description = "My First Book In Programming Languages.",
                            ImagePath = "team-image-3-646x680.jpg",
                            Title = "Java Programming Tutorial For Beginners"
                        });
                });

            modelBuilder.Entity("Bookstore.Web.Models.Book", b =>
                {
                    b.HasOne("Bookstore.Web.Models.Author", "Author")
                        .WithMany("Books")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");
                });

            modelBuilder.Entity("Bookstore.Web.Models.Author", b =>
                {
                    b.Navigation("Books");
                });
#pragma warning restore 612, 618
        }
    }
}
